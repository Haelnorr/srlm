"""empty message

Revision ID: 5aa18b39caef
Revises: 9888dd1e7bcb
Create Date: 2024-03-23 18:20:05.680014

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5aa18b39caef'
down_revision = '9888dd1e7bcb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('arena',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label')
    )
    op.create_table('award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('award', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_award_name'), ['name'], unique=True)

    op.create_table('end_reason',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label')
    )
    op.create_table('game_mode',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label')
    )
    op.create_table('league',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('acronym', sa.String(length=5), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('acronym')
    )
    with op.batch_alter_table('league', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_league_name'), ['name'], unique=True)

    op.create_table('matchtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('periods', sa.Boolean(), nullable=False),
    sa.Column('arena', sa.String(length=32), nullable=False),
    sa.Column('mercy_rule', sa.Integer(), nullable=False),
    sa.Column('match_length', sa.Integer(), nullable=False),
    sa.Column('game_mode', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('additional_modifiers', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permission_key'), ['key'], unique=True)

    op.create_table('server_region',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label')
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('acronym', sa.String(length=5), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('logo', sa.String(length=128), nullable=True),
    sa.Column('founded_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_team_acronym'), ['acronym'], unique=True)
        batch_op.create_index(batch_op.f('ix_team_name'), ['name'], unique=True)

    op.create_table('discord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(length=64), nullable=True),
    sa.Column('refresh_token', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('division',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('league', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['league'], ['league.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('league', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('finals_start', sa.DateTime(), nullable=True),
    sa.Column('finals_end', sa.DateTime(), nullable=True),
    sa.Column('match_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['league'], ['league.id'], ),
    sa.ForeignKeyConstraint(['match_type'], ['matchtype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('season', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_season_name'), ['name'], unique=False)

    op.create_table('user_permissions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'permission_id')
    )
    op.create_table('season_division',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['division_id'], ['division.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_division', sa.Integer(), nullable=True),
    sa.Column('best_of', sa.Integer(), nullable=False),
    sa.Column('elimination', sa.Boolean(), nullable=False),
    sa.Column('round', sa.String(length=20), nullable=False),
    sa.Column('home_team', sa.Integer(), nullable=True),
    sa.Column('away_team', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['away_team'], ['team.id'], ),
    sa.ForeignKeyConstraint(['home_team'], ['team.id'], ),
    sa.ForeignKeyConstraint(['season_division'], ['season_division.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slap_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('player_name', sa.String(length=64), nullable=False),
    sa.Column('rookie', sa.Boolean(), nullable=False),
    sa.Column('first_season', sa.Integer(), nullable=True),
    sa.Column('next_name_change', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['first_season'], ['season_division.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_name'),
    sa.UniqueConstraint('slap_id')
    )
    op.create_table('season_division_team',
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['season_division_id'], ['season_division.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], )
    )
    op.create_table('team_award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team', sa.Integer(), nullable=True),
    sa.Column('award', sa.Integer(), nullable=True),
    sa.Column('season_division', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['award'], ['award.id'], ),
    sa.ForeignKeyConstraint(['season_division'], ['season_division.id'], ),
    sa.ForeignKeyConstraint(['team'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('final', sa.Integer(), nullable=True),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.Column('loser', sa.Integer(), nullable=True),
    sa.Column('home_team_score', sa.Integer(), nullable=False),
    sa.Column('away_team_score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['final'], ['final.id'], ),
    sa.ForeignKeyConstraint(['loser'], ['team.id'], ),
    sa.ForeignKeyConstraint(['winner'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('free_agent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['season_division_id'], ['season_division.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_division', sa.Integer(), nullable=True),
    sa.Column('home_team', sa.Integer(), nullable=True),
    sa.Column('away_team', sa.Integer(), nullable=True),
    sa.Column('round', sa.Integer(), nullable=True),
    sa.Column('match_week', sa.Integer(), nullable=True),
    sa.Column('cancelled', sa.String(length=32), nullable=True),
    sa.Column('streamer', sa.Integer(), nullable=True),
    sa.Column('final', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['away_team'], ['team.id'], ),
    sa.ForeignKeyConstraint(['final'], ['final.id'], ),
    sa.ForeignKeyConstraint(['home_team'], ['team.id'], ),
    sa.ForeignKeyConstraint(['season_division'], ['season_division.id'], ),
    sa.ForeignKeyConstraint(['streamer'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player', sa.Integer(), nullable=True),
    sa.Column('award', sa.Integer(), nullable=True),
    sa.Column('season_division', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['award'], ['award.id'], ),
    sa.ForeignKeyConstraint(['player'], ['player.id'], ),
    sa.ForeignKeyConstraint(['season_division'], ['season_division.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lobby',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match', sa.Integer(), nullable=True),
    sa.Column('lobby_id', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['match'], ['match.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match', sa.Integer(), nullable=True),
    sa.Column('team', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['match'], ['match.id'], ),
    sa.ForeignKeyConstraint(['team'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.Column('loser', sa.Integer(), nullable=True),
    sa.Column('draw', sa.Boolean(), nullable=True),
    sa.Column('score_winner', sa.Integer(), nullable=False),
    sa.Column('score_loser', sa.Integer(), nullable=False),
    sa.Column('overtime', sa.Boolean(), nullable=False),
    sa.Column('forfeit', sa.Boolean(), nullable=False),
    sa.Column('vod', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['loser'], ['team.id'], ),
    sa.ForeignKeyConstraint(['winner'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match', sa.Integer(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('home_team_accepted', sa.Boolean(), nullable=False),
    sa.Column('away_team_accepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['match'], ['match.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lobby', sa.Integer(), nullable=True),
    sa.Column('match_id', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['lobby'], ['lobby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_match_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match', sa.Integer(), nullable=True),
    sa.Column('player', sa.Integer(), nullable=True),
    sa.Column('team', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=10), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('recorded_date', sa.DateTime(), nullable=False),
    sa.Column('reviewed_date', sa.DateTime(), nullable=True),
    sa.Column('valid', sa.Boolean(), nullable=True),
    sa.Column('comments', sa.String(length=256), nullable=True),
    sa.Column('goals', sa.Integer(), nullable=True),
    sa.Column('shots', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('saves', sa.Integer(), nullable=True),
    sa.Column('primary_assists', sa.Integer(), nullable=True),
    sa.Column('secondary_assists', sa.Integer(), nullable=True),
    sa.Column('passes', sa.Integer(), nullable=True),
    sa.Column('blocks', sa.Integer(), nullable=True),
    sa.Column('takeaways', sa.Integer(), nullable=True),
    sa.Column('turnovers', sa.Integer(), nullable=True),
    sa.Column('possession_time', sa.Integer(), nullable=True),
    sa.Column('game_winning_goals', sa.Integer(), nullable=True),
    sa.Column('overtime_goals', sa.Integer(), nullable=True),
    sa.Column('post_hits', sa.Integer(), nullable=True),
    sa.Column('faceoffs_won', sa.Integer(), nullable=True),
    sa.Column('faceoffs_lost', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['match'], ['match_data.id'], ),
    sa.ForeignKeyConstraint(['player'], ['player.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=120),
               nullable=False)
        batch_op.drop_column('permissions')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('permissions', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=64),
               nullable=True)

    op.drop_table('player_match_data')
    op.drop_table('match_data')
    op.drop_table('match_schedule')
    op.drop_table('match_result')
    op.drop_table('match_availability')
    op.drop_table('lobby')
    op.drop_table('player_team')
    op.drop_table('player_award')
    op.drop_table('match')
    op.drop_table('free_agent')
    op.drop_table('final_results')
    op.drop_table('team_award')
    op.drop_table('season_division_team')
    op.drop_table('player')
    op.drop_table('final')
    op.drop_table('season_division')
    op.drop_table('user_permissions')
    with op.batch_alter_table('season', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_season_name'))

    op.drop_table('season')
    op.drop_table('division')
    op.drop_table('discord')
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_team_name'))
        batch_op.drop_index(batch_op.f('ix_team_acronym'))

    op.drop_table('team')
    op.drop_table('server_region')
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permission_key'))

    op.drop_table('permission')
    op.drop_table('matchtype')
    with op.batch_alter_table('league', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_name'))

    op.drop_table('league')
    op.drop_table('game_mode')
    op.drop_table('end_reason')
    with op.batch_alter_table('award', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_award_name'))

    op.drop_table('award')
    op.drop_table('arena')
    # ### end Alembic commands ###
