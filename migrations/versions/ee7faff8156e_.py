"""empty message

Revision ID: ee7faff8156e
Revises: 
Create Date: 2024-05-03 17:12:58.751407

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ee7faff8156e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authorized_app',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('token', sa.String(length=34), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='api_access'
    )
    with op.batch_alter_table('authorized_app', schema='api_access') as batch_op:
        batch_op.create_index(batch_op.f('ix_api_access_authorized_app_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_api_access_authorized_app_token'), ['token'], unique=True)

    op.create_table('external_app',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('client_id', sa.String(length=128), nullable=True),
    sa.Column('client_secret', sa.String(length=128), nullable=True),
    sa.Column('grant_type', sa.String(length=128), nullable=True),
    sa.Column('access_token', sa.String(length=128), nullable=True),
    sa.Column('token_type', sa.String(length=128), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='api_access'
    )
    op.create_table('arena',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label'),
    schema='league_manager'
    )
    op.create_table('award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('award', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_award_name'), ['name'], unique=True)

    op.create_table('end_reason',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label'),
    schema='league_manager'
    )
    op.create_table('game_mode',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label'),
    schema='league_manager'
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('permission', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_permission_key'), ['key'], unique=True)

    op.create_table('server_region',
    sa.Column('value', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=32), nullable=False),
    sa.Column('info', sa.String(length=64), nullable=True),
    sa.Column('utc_offset', sa.String(length=7), nullable=True),
    sa.PrimaryKeyConstraint('value'),
    sa.UniqueConstraint('label'),
    schema='league_manager'
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('acronym', sa.String(length=5), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('logo', sa.String(length=128), nullable=True),
    sa.Column('founded_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('team', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_team_acronym'), ['acronym'], unique=True)
        batch_op.create_index(batch_op.f('ix_league_manager_team_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('reset_pass', sa.Boolean(), nullable=False),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.Column('steam_id', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('user', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_league_manager_user_token'), ['token'], unique=True)
        batch_op.create_index(batch_op.f('ix_league_manager_user_username'), ['username'], unique=True)

    op.create_table('discord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discord_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(length=64), nullable=True),
    sa.Column('refresh_token', sa.String(length=64), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('discord', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_discord_discord_id'), ['discord_id'], unique=True)

    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('module', sa.String(length=50), nullable=True),
    sa.Column('message', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('event', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_event_module'), ['module'], unique=False)
        batch_op.create_index(batch_op.f('ix_league_manager_event_timestamp'), ['timestamp'], unique=False)

    op.create_table('league',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('acronym', sa.String(length=5), nullable=False),
    sa.Column('server_region_value', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['server_region_value'], ['league_manager.server_region.value'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('acronym'),
    schema='league_manager'
    )
    with op.batch_alter_table('league', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_league_name'), ['name'], unique=True)

    op.create_table('matchtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('periods', sa.Boolean(), nullable=False),
    sa.Column('arena', sa.String(length=32), nullable=False),
    sa.Column('mercy_rule', sa.Integer(), nullable=False),
    sa.Column('match_length', sa.Integer(), nullable=False),
    sa.Column('game_mode', sa.String(length=32), nullable=False),
    sa.Column('num_players', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['arena'], ['league_manager.arena.value'], ),
    sa.ForeignKeyConstraint(['game_mode'], ['league_manager.game_mode.value'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='league_manager'
    )
    op.create_table('twitch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('twitch_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=64), nullable=False),
    sa.Column('refresh_token', sa.String(length=64), nullable=False),
    sa.Column('token_expiration', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('twitch', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_twitch_twitch_id'), ['twitch_id'], unique=True)

    op.create_table('user_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('additional_modifiers', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['league_manager.permission.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('division',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('acronym', sa.String(length=5), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['league_manager.league.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('acronym', sa.String(length=5), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('finals_start', sa.Date(), nullable=True),
    sa.Column('finals_end', sa.Date(), nullable=True),
    sa.Column('match_type_id', sa.Integer(), nullable=True),
    sa.Column('can_register', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['league_manager.league.id'], ),
    sa.ForeignKeyConstraint(['match_type_id'], ['league_manager.matchtype.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    with op.batch_alter_table('season', schema='league_manager') as batch_op:
        batch_op.create_index(batch_op.f('ix_league_manager_season_name'), ['name'], unique=False)

    op.create_table('season_division',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['division_id'], ['league_manager.division.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['league_manager.season.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('final',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.Column('best_of', sa.Integer(), nullable=False),
    sa.Column('elimination', sa.Boolean(), nullable=False),
    sa.Column('round', sa.String(length=20), nullable=False),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['away_team_id'], ['league_manager.team.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['league_manager.team.id'], ),
    sa.ForeignKeyConstraint(['season_division_id'], ['league_manager.season_division.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slap_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('player_name', sa.String(length=64), nullable=False),
    sa.Column('rookie', sa.Boolean(), nullable=False),
    sa.Column('first_season_id', sa.Integer(), nullable=True),
    sa.Column('next_name_change', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['first_season_id'], ['league_manager.season_division.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slap_id'),
    schema='league_manager'
    )
    op.create_table('season_division_team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['season_division_id'], ['league_manager.season_division.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('team_award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('award_id', sa.Integer(), nullable=True),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['award_id'], ['league_manager.award.id'], ),
    sa.ForeignKeyConstraint(['season_division_id'], ['league_manager.season_division.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('final_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('final_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('loser_id', sa.Integer(), nullable=True),
    sa.Column('home_team_score', sa.Integer(), nullable=False),
    sa.Column('away_team_score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['final_id'], ['league_manager.final.id'], ),
    sa.ForeignKeyConstraint(['loser_id'], ['league_manager.team.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('free_agent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['season_division_id'], ['league_manager.season_division.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('match',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('round', sa.Integer(), nullable=True),
    sa.Column('match_week', sa.Integer(), nullable=True),
    sa.Column('cancelled', sa.String(length=32), nullable=True),
    sa.Column('streamer_id', sa.Integer(), nullable=True),
    sa.Column('final_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['league_manager.team.id'], ),
    sa.ForeignKeyConstraint(['final_id'], ['league_manager.final.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['league_manager.team.id'], ),
    sa.ForeignKeyConstraint(['season_division_id'], ['league_manager.season_division.id'], ),
    sa.ForeignKeyConstraint(['streamer_id'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('player_award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('award_id', sa.Integer(), nullable=True),
    sa.Column('season_division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['award_id'], ['league_manager.award.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['season_division_id'], ['league_manager.season_division.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('player_team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('season_registration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['division_id'], ['league_manager.division.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['league_manager.season.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('team_invites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('invited_player_id', sa.Integer(), nullable=False),
    sa.Column('inviting_player_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.ForeignKeyConstraint(['invited_player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['inviting_player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('lobby',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('lobby_id', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(length=64), nullable=False),
    sa.Column('task_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['league_manager.match.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('match_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['league_manager.match.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('match_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('loser_id', sa.Integer(), nullable=True),
    sa.Column('draw', sa.Boolean(), nullable=True),
    sa.Column('score_winner', sa.Integer(), nullable=False),
    sa.Column('score_loser', sa.Integer(), nullable=False),
    sa.Column('overtime', sa.Boolean(), nullable=False),
    sa.Column('forfeit', sa.Boolean(), nullable=False),
    sa.Column('vod', sa.String(length=128), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['league_manager.match.id'], ),
    sa.ForeignKeyConstraint(['loser_id'], ['league_manager.team.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('match_review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('reason', sa.String(length=256), nullable=False),
    sa.Column('raised_by', sa.String(length=32), nullable=True),
    sa.Column('comments', sa.String(length=256), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('resolved_on', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['league_manager.match.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['league_manager.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('match_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('home_team_accepted', sa.Boolean(), nullable=False),
    sa.Column('away_team_accepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['league_manager.match.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('match_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lobby_id', sa.Integer(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('accepted', sa.Boolean(), nullable=False),
    sa.Column('match_id', sa.String(length=64), nullable=False),
    sa.Column('region', sa.String(length=16), nullable=False),
    sa.Column('gamemode', sa.String(length=16), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('arena', sa.String(length=16), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=False),
    sa.Column('away_score', sa.Integer(), nullable=False),
    sa.Column('winner', sa.String(length=10), nullable=False),
    sa.Column('current_period', sa.Integer(), nullable=False),
    sa.Column('periods_enabled', sa.Boolean(), nullable=False),
    sa.Column('custom_mercy_rule', sa.String(length=16), nullable=False),
    sa.Column('end_reason', sa.String(length=32), nullable=False),
    sa.Column('source', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['lobby_id'], ['league_manager.lobby.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    op.create_table('player_match_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('goals', sa.Integer(), nullable=True),
    sa.Column('shots', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('saves', sa.Integer(), nullable=True),
    sa.Column('primary_assists', sa.Integer(), nullable=True),
    sa.Column('secondary_assists', sa.Integer(), nullable=True),
    sa.Column('passes', sa.Integer(), nullable=True),
    sa.Column('blocks', sa.Integer(), nullable=True),
    sa.Column('takeaways', sa.Integer(), nullable=True),
    sa.Column('turnovers', sa.Integer(), nullable=True),
    sa.Column('possession_time_sec', sa.Integer(), nullable=True),
    sa.Column('game_winning_goals', sa.Integer(), nullable=True),
    sa.Column('overtime_goals', sa.Integer(), nullable=True),
    sa.Column('post_hits', sa.Integer(), nullable=True),
    sa.Column('faceoffs_won', sa.Integer(), nullable=True),
    sa.Column('faceoffs_lost', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('current_period', sa.Integer(), nullable=False),
    sa.Column('stat_total', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['league_manager.match_data.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['league_manager.player.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['league_manager.team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='league_manager'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('player_match_data', schema='league_manager')
    op.drop_table('match_data', schema='league_manager')
    op.drop_table('match_schedule', schema='league_manager')
    op.drop_table('match_review', schema='league_manager')
    op.drop_table('match_result', schema='league_manager')
    op.drop_table('match_availability', schema='league_manager')
    op.drop_table('lobby', schema='league_manager')
    op.drop_table('team_invites', schema='league_manager')
    op.drop_table('season_registration', schema='league_manager')
    op.drop_table('player_team', schema='league_manager')
    op.drop_table('player_award', schema='league_manager')
    op.drop_table('match', schema='league_manager')
    op.drop_table('free_agent', schema='league_manager')
    op.drop_table('final_results', schema='league_manager')
    op.drop_table('team_award', schema='league_manager')
    op.drop_table('season_division_team', schema='league_manager')
    op.drop_table('player', schema='league_manager')
    op.drop_table('final', schema='league_manager')
    op.drop_table('season_division', schema='league_manager')
    with op.batch_alter_table('season', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_season_name'))

    op.drop_table('season', schema='league_manager')
    op.drop_table('division', schema='league_manager')
    op.drop_table('user_permissions', schema='league_manager')
    with op.batch_alter_table('twitch', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_twitch_twitch_id'))

    op.drop_table('twitch', schema='league_manager')
    op.drop_table('matchtype', schema='league_manager')
    with op.batch_alter_table('league', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_league_name'))

    op.drop_table('league', schema='league_manager')
    with op.batch_alter_table('event', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_event_timestamp'))
        batch_op.drop_index(batch_op.f('ix_league_manager_event_module'))

    op.drop_table('event', schema='league_manager')
    with op.batch_alter_table('discord', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_discord_discord_id'))

    op.drop_table('discord', schema='league_manager')
    with op.batch_alter_table('user', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_user_username'))
        batch_op.drop_index(batch_op.f('ix_league_manager_user_token'))
        batch_op.drop_index(batch_op.f('ix_league_manager_user_email'))

    op.drop_table('user', schema='league_manager')
    with op.batch_alter_table('team', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_team_name'))
        batch_op.drop_index(batch_op.f('ix_league_manager_team_acronym'))

    op.drop_table('team', schema='league_manager')
    op.drop_table('server_region', schema='league_manager')
    with op.batch_alter_table('permission', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_permission_key'))

    op.drop_table('permission', schema='league_manager')
    op.drop_table('game_mode', schema='league_manager')
    op.drop_table('end_reason', schema='league_manager')
    with op.batch_alter_table('award', schema='league_manager') as batch_op:
        batch_op.drop_index(batch_op.f('ix_league_manager_award_name'))

    op.drop_table('award', schema='league_manager')
    op.drop_table('arena', schema='league_manager')
    op.drop_table('external_app', schema='api_access')
    with op.batch_alter_table('authorized_app', schema='api_access') as batch_op:
        batch_op.drop_index(batch_op.f('ix_api_access_authorized_app_token'))
        batch_op.drop_index(batch_op.f('ix_api_access_authorized_app_name'))

    op.drop_table('authorized_app', schema='api_access')
    # ### end Alembic commands ###
